WHO %>%
mutate_if(is.numeric,~NULL)
WHO %>%
mutate_if(is.numeric,NULL)
WHO %>%
mutate_if(is.numeric,~ ./. NULL)
WHO %>%
mutate_if(is.numeric,~ NULL)
WHO %>%
mutate_if(is.numeric,~ .x = NULL)
borrarCol <- function(x) x <- NULL
WHO %>%
mutate_if(is.numeric,~borrarCol)
WHO %>%
mutate_if(is.numeric,borrarCol)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
library(vegan)
help.search("bray-curtis")
help.search("vegdist")
??"vegdist"
help.search("vegdist")
round(0.00610, 2)
signif(0.00610, 2)
round(0.05,1)
signif(0.05,1)
round(0.05432,1)
signif(0.05432,1)
cut(1:100, breaks = 10)
cut(1:20, breaks = 10)
cut(1:20, breaks = 3)
cut(1:20, breaks = 3) |> view()
cut(1:20, breaks = 3) |> View()
cut(1:20, breaks = 3) |> str()
cut(1:20, breaks = 3) |> factor(labels = C("A","B""C))
cut(1:20, breaks = 3) |> factor(labels = C("A","B""C"))
cut(1:20, breaks = 3) |> factor(., labels = C("A","B""C"))
cut(1:20, breaks = 3) |> factor(labels = c("A","B""C"))
cut(1:20, breaks = 3) |> factor(labels = c("A","B","C"))
cut(1:20, breaks = 3)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
`%+%` <- function(a, b) paste0(a, b)
'new' %+% 'string'
install.packages("packagefinder")
library(packagefinder)
find.package("pca", display="browser")
find¨Package("pca", display="browser")
findPackage("pca", display="browser")
findPackage("transcriptomics", display="browser")
library(packagefinder)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
.libPaths()
.libPaths()
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
library(boot)
data("aids")
names(aids)
View(aids)
library(tidyverse)
aids %>%
group_by(year, quarter) %>%
summarise_at(is.numeric,
.funs = lst(mean), na.rm=TRUE)
aids %>%
group_by(year, quarter) %>%
summarise_if(is.numeric,
.funs = lst(mean), na.rm=TRUE)
aids %>%
group_by(year, quarter) %>%
summarise_at(is.numeric,
.funs = lst(mean), na.rm=TRUE)
aids %>%
group_by(year, quarter) %>%
summarise_at(.vars = vars(3:6),
.funs = lst(mean), na.rm=TRUE)
aids %>%
group_by(year, quarter) %>%
summarise_at(.vars = vars(delay, dud, time, y),
.funs = lst(mean), na.rm=TRUE)
aids %>%
group_by(year, quarter) %>%
summarise_at(.vars = 3:6,
.funs = lst(mean), na.rm=TRUE)
aids %>%
group_by(year, quarter) %>%
summarise_at(.vars = vars(delay, dud, time, y),
.funs = lst(mean), na.rm=TRUE)
aids %>%
group_by(year, quarter) %>%
summarise_at(.vars = vars(delay, dud, time, y),
.funs = lst(mean), na.rm=TRUE) %>%
arrange(year, quarter)
# Resultado
aids %>%
group_by(year, quarter) %>%
summarise_at(.vars = vars(delay, dud, time, y),
.funs = lst(mean), na.rm=TRUE) %>%
arrange(year, quarter)
# Resultado
aids %>%
filter(time > 38 & delay > 25)
# Resultado
aids %>%
filter(time >= 37 & delay > 25)
# Resultado
aids %>%
filter(time >= 37 & delay > 25)
# Resultado
aids %>%
filter(time >= 37 & delay > 25) %>%
pull(year) %>%
unique()
# Resultado
aids %>%
filter(time >= 30 & delay > 25) %>%
pull(year) %>%
unique()
# Resultado
aids %>%
filter(time >= 35 & delay > 25) %>%
pull(year) %>%
unique()
# Resultado
aids %>%
filter(time >= 33 & delay > 25) %>%
pull(year) %>%
unique()
# Resultado
aids %>%
filter(time >= 32 & delay > 25) %>%
pull(year) %>%
unique()
# Resultado
aids %>%
filter(time >= 31 & delay > 25) %>%
pull(year) %>%
unique()
# Resultado
aids %>%
filter(time >= 30 & delay > 25) %>%
pull(year) %>%
unique()
library(boot)
data("fish_encounters")
fish_encounters
fish_encounters %>%
filter(grp(station,"_"))
fish_encounters %>%
filter(grep(station,"_"))
fish_encounters %>%
filter(grep( "_",station))
fish_encounters %>%
filter(grepl( "_",station))
fish_encounters %>%
filter(grepl( "TD",station))
fish_encounters %>%
filter(grepl( "TD",station))
fish_encounters %>%
filter(grepl( "_",station))
fish_encounters %>%
filter(grepl( 0:9,station))
fish_encounters %>%
filter(grepl( "_",station))
fish_encounters %>%
filter(grepl("_",station))
install.packages("neonUtilities")
library(neonUtilities)
stackByTable("~/Downloads/NEON_par.zip")
data("cane") %>%
filter(grepl("_",station))
data("storms")
storms
data("storms") %>%
filter(grepl("Am", name))
data("storms") %>%
filter(grepl("Am", name))
grepl("Am", storms$name)
data("storms") %>%
filter(grepl("Am", name))
data("storms") %>%
mutate(name=factor*(name)) %>%
filter(grepl("Am", name))
data("storms") %>%
filter(grepl("A", name))
storm%>%
filter(grepl("A", name))
storms %>%
filter(grepl("A", name))
storms %>%
filter(grepl("y", name))
storms %>%
filter(grepl("pical", name))
fish_encounters %>%
filter(grepl("_",station))
install.packages(gapminder)
install.packages("gapminder")
library(gapminder)
data(gapminder)
data("gapminder")
gapminder %>%
filter(grepl("ru",Country))
names(gapminder)
gapminder %>%
filter(grepl("ru",country))
vector <- c("Andrea","Berta","Mark","Elon")
grepl("A", vector)
grepl("An", vector)
# Buscar An mayúscula en los elementos del vector
grepl("An", vector)
# Buscar re mayúscula en los elementos del vector
grepl("re", vector)
vector <- c("Andrea","Breta","Mark","Elon")
# Buscar la letra A mayúscula en los elementos del vector
grepl("A", vector)
# Buscar re mayúscula en los elementos del vector
grepl("re", vector)
# Buscar la letra A (mayúscula o minúscula) en los elementos del vector
grepl("A", vector, ignore.case = TRUE)
# Buscar re mayúscula en los elementos del vector
grepl("re", vector)
gapminder %>%
filter(grepl("ru",country))
gapminder %>%
filter(grepl("ru",country)) %>%
range(year)
library(tidyverse)
gapminder %>%
filter(grepl("ru",country)) %>%
range(year)
gapminder %>%
filter(grepl("ru",country)) %>%
range(.$year)
gapminder %>%
filter(grepl("ru",country)) %>%
range()
gapminder %>%
filter(grepl("ru",country))
gapminder %>%
filter(grepl("ru",country)) %>%
unique(country)
gapminder %>%
filter(grepl("ru",country)) %>%
unique(country )
gapminder %>%
filter(grepl("ru",country)) %>%
unique(country)
gapminder %>%
filter(grepl("ru",country))
gapminder %>%
filter(grepl("ru",country)) %>%
pull(country) %>%
unique()
gapminder %>%
filter(grepl("pe",country)) %>%
pull(country) %>%
unique()
gapminder %>%
filter(grepl("pe",country, ignore.case = TRUE)) %>%
pull(country) %>%
unique()
gapminder %>%
filter(grepl("ru",country, ignore.case = TRUE)) %>%
pull(country) %>%
unique()
gapminder %>%
filter(grepl(c("ru","pe"),country, ignore.case = TRUE)) %>%
pull(country) %>%
unique()
gapminder %>%
filter(grepl("ru",country, ignore.case = TRUE)) %>%
pull(country) %>%
unique()
gapminder %>%
filter(grepl("pe",country, ignore.case = TRUE)) %>%
pull(country) %>%
unique()
gapminder %>%
filter(grepl("pe | ru",country, ignore.case = TRUE, fixed = T)) %>%
pull(country) %>%
unique()
gapminder %>%
filter(grepl("pe | ru",country, fixed = T)) %>%
pull(country) %>%
unique()
gapminder %>%
filter(grepl("pe | ru",country, fixed = TRUE)) %>%
pull(country) %>%
unique()
gapminder %>%
filter(grepl("pe | ru",country, fixed = TRUE,value=TRUE)) %>%
pull(country) %>%
unique()
gapminder %>%
filter(grep("pe | ru",country, fixed = TRUE,value=TRUE)) %>%
pull(country) %>%
unique()
gapminder %>%
filter(grep("pe | ru",country, fixed = TRUE)) %>%
pull(country) %>%
unique()
gapminder %>%
filter(grepl("ru",country, ignore.case = TRUE)) %>%
pull(country) %>%
unique()
gapminder %>%
filter(grepl("pe",country, ignore.case = TRUE)) %>%
pull(country) %>%
unique()
gapminder %>%
filter(grepl("nia",country, ignore.case = TRUE)) %>%
pull(country) %>%
unique()
gapminder %>%
filter(grepl("ru",country)) %>%
pull(country) %>%
unique()
bookdown::render_book("index.Rmd", "bookdown::gitbook")
# Conjunto de datos
vector <- c("Andrea","Breta","Mark","Elon")
# Buscar la letra A mayúscula en los elementos del vector
grepl("A", vector)
# Buscar la letra A (mayúscula o minúscula) en los elementos del vector
grepl("A", vector, ignore.case = TRUE)
# Buscar re mayúscula en los elementos del vector
grepl("re", vector)
# Buscar re mayúscula en los elementos del vector
grepl("re", vector)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
data("beaver")
names(beaver)
beaver
data("breslow")
names(breslow)
breslow
breslow %>%
filter(smoke=="1" & age > 40) %>%
nrow()
breslow %>%
filter(smoke=="1" & age > 40)
str(breslow)
breslow %>%
mutate(age = as.numeric(age)) %>%
filter(smoke=="1" & age > 40)
breslow %>%
mutate(age = as.numeric(age),
smoke = as.factor(smoke)) %>%
filter(smoke=="1" & age > 40)
breslow %>%
mutate(age = as.numeric(age),
smoke = as.factor(smoke))
breslow %>%
mutate(age = as.numeric(age),
smoke = as.factor(smoke)) %>% str()
breslow %>%
mutate(age = as.character(age),
smoke = as.factor(smoke)) %>% str()
breslow %>%
mutate(age = as.character(age),
age = as.numeric(age),
smoke = as.factor(smoke)) %>%
filter(smoke=="1" & age > 40)
nrow(breslow)
data("population")
population
population %>%
filter(year == 1995) %>%
summarise(maximo1995 = max(population))
population %>%
filter(year == 1995) %>%
summarise(maximo1995 = max(population)/1000000)
population %>%
filter(year == 1995) %>%
mutate(Millones = population/1000000)
population %>%
filter(year == 1995) %>%
mutate(Millones = population/1000000) %>%
arrange(desc(population))
population %>%
filter(year == 1995) %>%
mutate(Millones = population/1000000) %>%
arrange(desc(population)) %>%
head()
population %>%
filter(year == 2007) %>%
mutate(Millones = population/1000000) %>%
arrange(desc(population)) %>%
head()
### Resultado para 1995
population %>%
filter(year == 1995) %>%
mutate(Millones = population/1000000) %>%
top_n(Millones, 6)
### Resultado para 1995
population %>%
filter(year == 1995) %>%
mutate(Millones = population/1000000) %>%
top_n(6,Millones)
### Resultado para 1995
population %>%
filter(year == 1995) %>%
mutate(Millones = population/1000000) %>%
top_n(6,Millones)
### Resultado para 1995
population %>%
filter(year == 1995) %>%
mutate(Millones = population/1000000) %>%
arrange(desc(population)) %>%
head()
### Resultado para 1995
population %>%
filter(year == 1995) %>%
mutate(Millones = population/1000000) %>%
arrange(desc(population)) %>%
head()
### Resultado para 2007
population %>%
filter(year == 2007) %>%
mutate(Millones = population/1000000) %>%
arrange(desc(population)) %>%
head()
### Resultado para 1995
population %>%
filter(year == 1995) %>%
mutate(Millones = population/1000000) %>%
arrange(desc(population)) %>%
head()
### Resultado para 2007
population %>%
filter(year == 2007) %>%
mutate(Millones = population/1000000) %>%
arrange(desc(population)) %>%
head()
### Resultado para 1995
population %>%
filter(year == 1995) %>%
mutate(Millones = population/1000000) %>%
arrange(desc(population)) %>%
head()
### Resultado para 1995
Ta<- population %>%
filter(year == 1995) %>%
mutate(Millones = population/1000000) %>%
arrange(desc(population)) %>%
head()
### Resultado para 2007
Tb <-population %>%
filter(year == 2007) %>%
mutate(Millones = population/1000000) %>%
arrange(desc(population)) %>%
head()
anti_join(Ta, Tb)
anti_join(Ta, Tb, by="country")
Tabla_A
### Resultado para 1995
Tabla_A <- population %>%
filter(year == 1995) %>%
mutate(Millones = population/1000000) %>%
arrange(desc(population)) %>%
head()
### Resultado para 2007
Tabla_B <-population %>%
filter(year == 2007) %>%
mutate(Millones = population/1000000) %>%
arrange(desc(population)) %>%
head()
Tabla_A
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
install.packages("rmarkdown")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::pdf_book(toc = TRUE, number_sections = TRUE, fig_caption = TRUE,
pandoc_args = NULL, ..., base_format = rmarkdown::pdf_document,
toc_unnumbered = TRUE, toc_appendix = FALSE, toc_bib = FALSE,
quote_footer = NULL, highlight_bw = FALSE)
bookdown::pdf_book(toc = TRUE, number_sections = TRUE, fig_caption = TRUE,
pandoc_args = NULL,  base_format = rmarkdown::pdf_document,
toc_unnumbered = TRUE, toc_appendix = FALSE, toc_bib = FALSE,
quote_footer = NULL, highlight_bw = FALSE)
bookdown:pdf_book(base_format = tufte::tufte_book)
bookdown::pdf_book(base_format = tufte::tufte_book)
bookdown::pdf_book(base_format = rmarkdown::pdf_document)
bookdown::pdf_book("index.Rmd",base_format = rmarkdown::pdf_document)
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update()
install.packages("tlmgr")
install.packages("tlmgr")
tinytex::tlmgr_update()
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update()
colorPal <- c("#8BC73D","#077173","#5CCAE2","#F2CD00","#CD001A","#5E36CC")
tinytex::reinstall_tinytex()
tinytex::reinstall_tinytex()
tinytex::install_tinytex()
tinytex::reinstall_tinytex()
bookdown::render_book("index.Rmd", "bookdown::gitbook")
