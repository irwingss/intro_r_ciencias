mutate(MP = (sqrt(Measles) / 0.39 * Polio^2)) %>%
arrange(desc(MP))
WHO %>%
dplyr::select(Measles, Polio, Country, Year) %>%
mutate(MP = (sqrt(Measles) / 0.39 * Polio^2)) %>%
arrange(desc(MP)) %>%
head()
WHO %>%
dplyr::select(Measles, Polio, Country, Year) %>%
mutate(MP = (sqrt(Measles) / 0.39 * Polio^2)) %>%
arrange(desc(MP)) %>%
head(10)
WHO %>%
dplyr::select(Measles, Polio, Country, Year) %>%
mutate(MP = (0.01*(sqrt(Measles) / 0.39 * Polio^2))) %>%
arrange(desc(MP)) %>%
head(10)
WHO %>%
dplyr::select(Measles, Polio, Country, Year) %>%
mutate(MP = (0.001*(sqrt(Measles) / 0.39 * Polio^2))) %>%
arrange(desc(MP)) %>%
head(10)
WHO %>%
dplyr::select(Measles, Polio, Country, Year) %>%
mutate(MP = (0.0001*(sqrt(Measles) / 0.39 * Polio^2))) %>%
arrange(desc(MP)) %>%
head(10)
WHO %>%
dplyr::select(Measles, Polio, Country, Year) %>%
mutate(MP = (0.00001*(sqrt(Measles) / 0.39 * Polio^2))) %>%
arrange(desc(MP)) %>%
head(10)
# con transmute()
WHO %>%
dplyr::select(Measles, Polio, Country, Year) %>%
transmute(MP = (0.00001*(sqrt(Measles) / 0.39 * Polio^2))) %>%
arrange(desc(MP)) %>%
head(10)
# con transmute()
WHO %>%
transmute(MP = (0.00001*(sqrt(Measles) / 0.39 * Polio^2))) %>%
arrange(desc(MP)) %>%
head(10)
mutate_all(.funs = lst(round)
WHO %>%
dplyr::select(Income, GDP, Life_exp) %>%
mutate_all(.funs = lst(round))
WHO %>%
dplyr::select(Income, GDP, Life_exp) %>%
mutate_all(.funs = lst(round))
WHO %>%
dplyr::select(Income, GDP, Life_exp) %>%
mutate_all(.funs = lst(round)) %>%
head(10)
WHO %>%
dplyr::select(Income, GDP, Life_exp) %>%
mutate_all(.funs = lst(round(1))) %>%
head(10)
WHO %>%
dplyr::select(Income, GDP, Life_exp) %>%
mutate_all(.funs = lst(round(., 1))) %>%
head(10)
WHO %>%
dplyr::select(Income, GDP, Life_exp) %>%
mutate_all(.funs = lst(round(_, 1))) %>%
head(10)
WHO %>%
dplyr::select(Income, GDP, Life_exp) %>%
mutate_all(.funs = lst(round(., 1))) %>%
head(10)
WHO %>%
dplyr::select(Income, GDP, Life_exp) %>%
mutate_all(.funs = lst(round(., 1))) %>%
head(10)
WHO %>%
dplyr::select(Income, GDP, Life_exp) %>%
mutate_all(round(1)) %>%
head(10)
WHO %>%
dplyr::select(Income, GDP, Life_exp) %>%
mutate_all(round()) %>%
head(10)
WHO %>%
dplyr::select(Income, GDP, Life_exp) %>%
mutate_all(.funs = lst(round())) %>%
head(10)
WHO %>%
dplyr::select(Income, GDP, Life_exp) %>%
mutate_all(.funs = lst(round(.))) %>%
head(10)
WHO %>%
dplyr::select(Income, GDP, Life_exp) %>%
mutate_all(.funs = lst(round(1))) %>%
head(10)
WHO %>%
dplyr::select(Income, GDP, Life_exp) %>%
mutate_all(.funs = lst(round())) %>%
head(10)
WHO %>%
dplyr::select(Income, GDP, Life_exp) %>%
mutate_all(.funs = lst(round(., 2))) %>%
head(10)
WHO %>%
dplyr::select(Income, GDP, Life_exp) %>%
mutate_all(.funs = lst(function(x)round(x,2))) %>%
head(10)
rr <- function(x)round(x,2))
rr <- function(x)round(x,2)
WHO %>%
dplyr::select(Income, GDP, Life_exp) %>%
mutate_all(.funs = lst(rr)) %>%
head(10)
# Aplicar dentro de mutate_all()
WHO %>%
dplyr::select(Income, GDP, Life_exp) %>%
mutate_all(.funs = lst(rr)) %>%
head(10)
# Aplicar dentro de mutate_all()
WHO %>%
dplyr::select(Income, GDP, Life_exp) %>%
mutate_all(.funs = lst(a=rr)) %>%
head(10)
# Aplicar dentro de mutate_all
WHO %>%
dplyr::select(Income, GDP, Life_exp) %>%
mutate_all(.funs = lst(rr)) %>%
head(10)
# Aplicar dentro de mutate_all
WHO %>%
dplyr::select() %>%
mutate_all(.vars = vars(Income, GDP, Life_exp),
.funs = lst(rr)) %>%
head(10)
# Aplicar dentro de mutate_all
WHO %>%
mutate_all(.vars = vars(Income, GDP, Life_exp),
.funs = lst(rr)) %>%
head(10)
# Aplicar dentro de mutate_all
WHO %>%
mutate_at(.vars = vars(Income, GDP, Life_exp),
.funs = lst(rr)) %>%
head(10)
# Aplicar dentro de mutate_all
WHO %>%
select(Income, GDP, Life_exp, Hep_B, BMI, Polio) %>%
mutate_at(.vars = vars(Income, GDP, Life_exp),
.funs = lst(rr)) %>%
head(10)
# Aplicar dentro de mutate_all
WHO %>%
select(Income, GDP, Life_exp, Hep_B, BMI, Polio) %>%
transmute_at(.vars = vars(Income, GDP, Life_exp),
.funs = lst(rr)) %>%
head(10)
# Aplicar dentro de mutate_all
WHO %>%
transmute_at(.vars = vars(Income, GDP, Life_exp),
.funs = lst(rr)) %>%
head(10)
WHO %>%
mutate_if(is.character, as.factor)
str(WHO)
# Utilizar mutate_if()
WHO2 <- WHO %>%
mutate_if(is.character, as.factor)
# Revisar la estructura de WHO2
# Notar que las columnas chr cambiaron a
str(WHO2)
Base_A <- data.frame(COL1 = LETTERS[1:3],
COL2 = 1:3)
Base_A <- data.frame(COL1 = LETTERS[1:4],
COL2 = 1:4)
Base_B <- data.frame(COL1 = LETTERS[c(1,3,4,5)],
COL2 = c(T,T,F,F))
inner_join(Base_A, Base_B)
semi_join(Base_A, Base_B)
inner_join(Base_A, Base_B, by=COL1)
inner_join(Base_A, Base_B, by="COL1")
semi_join(Base_A, Base_B, by="COL1")
Base_B <- data.frame(COL1 = LETTERS[c(1,3,4,5)],
COL3 = c(T,T,F,F))
inner_join(Base_A, Base_B, by="COL1")
semi_join(Base_A, Base_B, by="COL1")
Base_A <- data.frame(ID = LETTERS[1:4],
COL1 = 1:4)
Base_B <- data.frame(ID = LETTERS[c(1,3,4,5)],
COL2 = c(T,T,F,F))
inner_join(Base_A, Base_B, by="COL1")
inner_join(Base_A, Base_B, by="ID")
semi_join(Base_A, Base_B, by="ID")
full_join(Base_A, Base_B, by="ID")
left_join(Base_A, Base_B, by="ID")
left_join(Base_A, Base_B, by="ID")
right_join(Base_A, Base_B, by="ID")
inner_join(Base_A, Base_B, by="ID")
semi_join(Base_A, Base_B, by="ID")
anti_join(Base_A, Base_B, by="ID")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
is.na(WHO)
WHO_logic <- is.na(WHO)
WHO_logical <- is.na(WHO)
sum(WHO_logical)
fun_na <- function(x) sum(is.na(x))
WHO %>%
summarise_all(.funs = fun_na())
WHO %>%
summarise_all(.funs = fun_na)
WHO %>%
summarise_all(.funs = fun_na) %>%
select_if(sum > 0)
WHO %>%
summarise_all(.funs = fun_na) %>%
select_if(sum() > 0)
WHO %>%
summarise_all(.funs = fun_na) %>%
select_if(sum(.) > 0)
WHO %>%
summarise_all(.funs = fun_na) %>%
select_if(sum() > 0)
fun_na0 <- function(x) sum(is.na(x)) > 0
WHO %>%
summarise_all(.funs = fun_na) %>%
select_if(fun_na0)
fun_na0 <- function(x) sum() > 0
fun0 <- function(x) sum() > 0
WHO %>%
summarise_all(.funs = fun_na) %>%
select_if(fun_na0)
WHO %>%
summarise_all(.funs = fun_na) %>%
select_if(fun0)
fun_na <- function(x) sum(is.na(x))
fun0 <- function(x) sum() > 0
fun0 <- function(x) sum(x) > 0
WHO %>%
summarise_all(.funs = fun_na) %>%
select_if(fun0)
which(is.na(WHO), arr.ind=TRUE)
which(WHO_logical, arr.ind=TRUE) %>%
head()
which(WHO_logical, arr.ind=TRUE) %>%
head(10)
tidyr::replace_na(WHO, 9999) %>%
summarise_all(.funs = fun_na)
tidyr::replace_na(WHO, 9999)
tidyr::replace_na(WHO, list(9999)) %>%
summarise_all(.funs = fun_na)
WHO %>%
replace_na(., 9999)
WHO %>%
replace_na(., list(9999))
WHO %>%
replace_na(., list(9999)) %>%
summarise_all(.funs = fun_na)
WHO %>%
mutate(across(everything(), ~replace_na(.x, 0)))
WHO %>%
mutate(across(everything(), ~replace_na(.x, "0")))
WHO %>%
mutate(across(everything(), ~replace_na(.x, 0)))
WHO[NA]
WHO[WHO==NA]
cambiarNA <- function(x) {
x[x == NA] <- 9999
print(x)
}
cambiarNA <- function(x) {
x[is.na(x)] <- 9999
print(x)
}
cambiarNA(WHO)
which(WHO_logical, arr.ind=TRUE) %>%
head(10)
cambiarNA(WHO) %>%
summarise_all(.funs = fun_na)
cambiarNA(WHO) %>%
summarise_all(.funs = fun_na) %>%
select_if(fun0)
cambiarNA(WHO) %>%
summarise_all(.funs = fun_na) %>%
select_if(fun0)
fun_na <- function(x) sum(is.na(x))
fun0 <- function(x) sum(x) > 0
cambiarNA(WHO) %>%
summarise_all(.funs = fun_na) %>%
select_if(fun0)
cambiarNA(WHO) %>%
summarise_all(.funs = fun_na)
cambiarNA(WHO) %>%
summarise_all(.funs = fun_na) %>%
select_if(fun0)
return(x)
cambiarNA <- function(x) {
x[is.na(x)] <- 9999
return(x)
}
cambiarNA(WHO) %>%
summarise_all(.funs = fun_na) %>%
select_if(fun0)
print(x)
cambiarNA <- function(x) {
x[is.na(x)] <- 9999
print(x)
}
cambiarNA(WHO) %>%
summarise_all(.funs = fun_na) %>%
select_if(fun0)
return(x)
cambiarNA <- function(x) {
x[is.na(x)] <- 9999
return(x)
}
cambiarNA(WHO) %>%
summarise_all(.funs = fun_na) %>%
select_if(fun0)
cambiarNA <- function(x) {
x[is.na(x)] <- 9999
return(x)
}
cambiarNA(WHO) %>%
summarise_all(.funs = fun_na) %>%
select_if(fun0)
cambiarNA_Prom <- function(x) {
x[is.na(x)] <- mean(x)
return(x)
}
cambiarNA_Prom(WHO) %>%
summarise_all(.funs = fun_na) %>%
select_if(fun0)
cambiarNA_Prom <- function(x) {
x[is.na(x)] <- mean(x, na.rm=TRUE)
return(x)
}
cambiarNA_Prom(WHO) %>%
summarise_all(.funs = fun_na) %>%
select_if(fun0)
cambiarNA_Prom <- function(x) {
x[is.na(x)] <- mean(x, na.rm=TRUE)
return(x)
}
cambiarNA_Prom(WHO) %>%
summarise_all(.funs = fun_na) %>%
select_if(fun0)
cambiarNA_Prom(WHO)
cambiarNA_Prom <- function(x) {
x[is.na(x)] <- mean(x, na.rm=TRUE)
return(x)
}
cambiarNA_Prom(WHO) %>%
summarise_all(.funs = fun_na) %>%
select_if(fun0)
cambiarNA_Prom(c(1,2,3,N))
cambiarNA_Prom(c(1,2,3,NA))
cambiarNA_Prom(data.frame(c(1,2,3,NA),c(1,2,3,NA)))
cambiarNA_Prom(data.frame(A=c(1,2,3,NA),B=c(1,2,3,NA)))
apply(WHO, 2, cambiarNA_Prom) %>%
summarise_all(.funs = fun_na) %>%
select_if(fun0)
apply(WHO, 2, cambiarNA_Prom)
apply(WHO, 2, cambiarNA_Prom) %>%
as.data.frame() %>%
summarise_all(.funs = fun_na) %>%
select_if(fun0)
WHO %>%
select_if(is.numeric) %>%
apply(2, cambiarNA_Prom) %>%
as.data.frame() %>%
summarise_all(.funs = fun_na) %>%
select_if(fun0)
WHO %>%
select_if(is.numeric) %>%
apply(2, cambiarNA_Prom)
WHO %>%
select_if(is.numeric) %>%
apply(2, cambiarNA_Prom) %>%
as.data.frame()
WHO %>%
select_if(is.numeric) %>%
apply(2, cambiarNA_Prom) %>%
as.data.frame() %>%
summarise_all(.funs = fun_na)
WHO %>% mutate_all(~ifelse(is.na(.x), mean(.x, na.rm = TRUE), .x))
WHO %>% mutate_all(~ifelse(is.na(.x), 9999, .x))
WHO %>% mutate_all(~ifelse(is.na(.x), 9999999, .x))
WHO %>% mutate_all(~ifelse(is.na(.x), 9999999, .x)) %>% View()
WHO %>% mutate_all(ifelse(is.na(.x), 9999999, .x)) %>% View()
WHO %>% mutate_all(~ifelse(is.na(.x), 9999999, .x)) %>% View()
WHO %>%
arrange(Alcohol) %>%
mutate_all(~ifelse(is.na(.x), mean(.x, na.rm = TRUE), .x))
WHO %>%
arrange(Alcohol) %>%
mutate_all(~ifelse(is.na(.x), mean(.x, na.rm = TRUE), .x))%>%
head()
WHO %>%
select(Alcohol, Hep_B, Measles, Polio, Diph) %>%
arrange(Alcohol) %>%
mutate_all(~ifelse(is.na(.x), mean(.x, na.rm = TRUE), .x))%>%
head()
WHO %>%
arrange(Alcohol) %>%
mutate_all(~ifelse(is.na(.x), 9999999, .x)) %>%
head()
WHO %>%
dplyr::select(Alcohol, Hep_B, Measles, Polio, Diph) %>%
arrange(Alcohol) %>%
mutate_all(~ifelse(is.na(.x), 9999999, .x)) %>%
head()
WHO %>%
dplyr::select(Alcohol, Hep_B, Measles, Polio, Diph) %>%
arrange(desc(Alcohol)) %>%
mutate_all(~ifelse(is.na(.x), 9999999, .x)) %>%
head()
WHO %>%
dplyr::select(Alcohol, Hep_B, Measles, Polio, Diph) %>%
arrange(Alcohol) %>%
mutate_all(~ifelse(is.na(.x), mean(.x, na.rm = TRUE), .x))%>%
head()
WHO %>%
dplyr::select(Alcohol, Hep_B, Measles, Polio, Diph) %>%
arrange(desc(Alcohol)) %>%
mutate_all(~ifelse(is.na(.x), 9999999, .x)) %>%
head()
WHO %>%
dplyr::select(Alcohol, Hep_B, Measles, Polio, Diph) %>%
arrange(Alcohol) %>%
mutate_all(~ifelse(is.na(.x), 9999999, .x)) %>%
head()
WHO %>%
dplyr::select(Alcohol, Hep_B, Measles, Polio, Diph) %>%
arrange(Alcohol) %>%
mutate_all(~ifelse(is.na(.x), 9999999, .x)) %>%
tail()
WHO %>%
dplyr::select(Alcohol, Hep_B, Measles, Polio, Diph) %>%
arrange(Alcohol) %>%
mutate_all(~ifelse(is.na(.x), 9999999, .x)) %>%
tail()
WHO %>%
dplyr::select(Alcohol, Hep_B, Measles, Polio, Diph) %>%
arrange(Alcohol) %>%
mutate_all(~ifelse(is.na(.x), mean(.x, na.rm = TRUE), .x))%>%
tail()
# Sumando todos los TRUE (equivalentes a 1)
sum(WHO_logical)
WHO %>%
summarise_all(.funs = fun_na)
fun0 <- function(x) x > 0
WHO %>%
summarise_all(.funs = fun_na) %>%
select_if(fun0)
which(WHO_logical, arr.ind=TRUE) %>%
head(10)
WHO %>%
mutate_if(is.numeric,~NULL)
WHO %>%
mutate_if(is.numeric,NULL)
WHO %>%
mutate_if(is.numeric,~ ./. NULL)
WHO %>%
mutate_if(is.numeric,~ NULL)
WHO %>%
mutate_if(is.numeric,~ .x = NULL)
borrarCol <- function(x) x <- NULL
WHO %>%
mutate_if(is.numeric,~borrarCol)
WHO %>%
mutate_if(is.numeric,borrarCol)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
library(vegan)
help.search("bray-curtis")
help.search("vegdist")
??"vegdist"
help.search("vegdist")
round(0.00610, 2)
signif(0.00610, 2)
round(0.05,1)
signif(0.05,1)
round(0.05432,1)
signif(0.05432,1)
cut(1:100, breaks = 10)
cut(1:20, breaks = 10)
cut(1:20, breaks = 3)
cut(1:20, breaks = 3) |> view()
cut(1:20, breaks = 3) |> View()
cut(1:20, breaks = 3) |> str()
cut(1:20, breaks = 3) |> factor(labels = C("A","B""C))
cut(1:20, breaks = 3) |> factor(labels = C("A","B""C"))
cut(1:20, breaks = 3) |> factor(., labels = C("A","B""C"))
cut(1:20, breaks = 3) |> factor(labels = c("A","B""C"))
cut(1:20, breaks = 3) |> factor(labels = c("A","B","C"))
cut(1:20, breaks = 3)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
`%+%` <- function(a, b) paste0(a, b)
'new' %+% 'string'
install.packages("packagefinder")
library(packagefinder)
find.package("pca", display="browser")
find¨Package("pca", display="browser")
findPackage("pca", display="browser")
findPackage("transcriptomics", display="browser")
library(packagefinder)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
.libPaths()
.libPaths()
bookdown::render_book("index.Rmd", "bookdown::gitbook")
